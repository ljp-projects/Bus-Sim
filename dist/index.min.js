"use strict";const Routes=Object.freeze({MakeRoute:e=>{var s={"Albanese Beach":1e3,Scomoville:2e3,"Edison Square":2100,"Finhorn Valley":1100,Musk:1110,Eloneville:3e3,"Musk Square":1111,"Anthony Corner":1120,"El Salvador":3100,length:9};const o=[];for(let t=0;t<e;t++){var n=Math.max(~~(17*Math.random()),4),i=Object.keys(s)[~~(Math.random()*s.length)];o.push({name:i,code:s[i],timeSecs:n})}return{stops:o,totalTimeSecs:(()=>{let e=0;return o.forEach(t=>{e+=t.timeSecs}),e})()}},TravelRoute:n=>{!function t(e){const s=n.stops[n.stops.indexOf(e)!==n.stops.length-1?n.stops.indexOf(e)+1:-1],o=n.stops[0!==n.stops.indexOf(e)?n.stops.indexOf(e)-1:-1];console.log(null==o?`Travelling to ${e.name} (${e.code}), which would take ${e.timeSecs} irl seconds, or ${5*e.timeSecs} game minutes.`:`Travelling to ${e.name} (${e.code}) from ${o.name} (${o.code}), which would take ${e.timeSecs} irl seconds, or ${5*e.timeSecs} game minutes.`),setTimeout(()=>{null!=s?t(s):console.log(`Finished travelling! Travel took ${n.totalTimeSecs} irl seconds, or ${5*n.totalTimeSecs} game minutes.`)},1e3*e.timeSecs)}(n.stops[0])},length:2});class Bus{constructor(t,e,s){this.hasRoute=!1,this.status=0,this.name=t,this.id=e,s&&this.addRoute(s)}addRoute(t){return this.hasRoute=!0,this.route=t,this}removeRoute(){return this.hasRoute=!1,this.route=void 0,this}travel(){if(this.route&&this.hasRoute){const n=t=>{if(this.route&&this.hasRoute){var e=this.route.stops.indexOf(t);console.log(e);const o=this.route.stops[e!==this.route.stops.length-1?e+1:-1];var s=this.route.stops[0!==e?e-1:-1];this.status<=8?console.log(t,null!=o?o:null,null!=s?s:null):9===this.status?console.log("Bus has broken down."):10===this.status&&console.log("Bus is out of fuel."),e%2!=0&&this.status<=8||(this.status=~~(11*Math.random())),o&&setTimeout(()=>n(o),1e3*t.timeSecs)}};n(this.route.stops[0])}return this}addToList(t){var e=`
        <b>${this.name}</b>
        <p>(${this.id})</p>
        <br>
        <button id="BUS-${this.id}-CHECK" class="check">Check</button>
        `,s=document.createElement("li");return s.innerHTML=e,setTimeout(()=>{var t=document.getElementById(`BUS-${this.id}-CHECK`);null!=t&&t.addEventListener("click",()=>{this.openDialog(),setTimeout(this.addCloseDialogListener,100)})},100),null!=t&&t.appendChild(s),this}addCloseDialogListener(){var t=document.getElementById(`BUS-${this.id}-CLOSE`);const e=document.getElementById("about-bus"),s=document.getElementById("content");e&&s&&null!=t&&t.addEventListener("click",()=>{s.setAttribute("class","noblur"),e.close(),e.innerHTML=""})}openDialog(){var t=document.getElementById("content"),e=document.getElementById("about-bus"),s=`
        <h2>${this.name}</h2>
        <p>${this.status<=8?"Normal":9===this.status?"Bus has broken down.":10===this.status?"Bus is out of fuel":"UNKOWN"}</p>
        <button id="BUS-${this.id}-CLOSE" class="close">Close</button>
        `;e&&(e.innerHTML=s,null!=t&&t.setAttribute("class","blur"),e.showModal())}}const bus=new Bus("Pizza",(new Date).getTime(),Routes.MakeRoute(5));bus.addToList(document.getElementById("buses"));